{"version":3,"sources":["assets/Hand.png","assets/HandText.png","components/Bubble/Bubble.tsx","components/Header/Header.tsx","api/index.ts","components/RegistrationForm/RegistrationForm.tsx","components/Scroller/Scroller.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Bubble","from","index","children","style","useIsInViewport","threshold","isInViewport","targetRef","variants","useMemo","hidden","opacity","scale","transition","duration","delay","visible","type","damping","mass","div","ref","initial","animate","className","Header","useState","isComplete","setIsComplete","scrollYProgress","useViewportScroll","yRange","useTransform","pathLength","useSpring","stiffness","useEffect","onChange","v","src","logo","alt","viewBox","path","fill","strokeWidth","stroke","strokeDasharray","d","axios","create","baseURL","RegistrationForm","useForm","handleSubmit","register","errors","setValue","onSubmit","values","a","console","log","API","post","result","error","width","name","aria-label","placeholder","required","friend_name","week","event","parseInt","target","value","htmlFor","day","time","phone","minLength","validate","length","introElements","content","role","detailElements","Scroller","map","key","handText","maxWidth","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5c5a2d8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hand.b961a296.png\";","module.exports = __webpack_public_path__ + \"static/media/HandText.4bab6bc1.png\";","import React, { useMemo } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport useIsInViewport from \"use-is-in-viewport\";\r\nimport \"./Bubble.css\";\r\n\r\ninterface BubbleProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  from: \"me\" | \"you\" | \"us\";\r\n  index: number;\r\n}\r\n\r\nconst Bubble: React.FC<BubbleProps> = ({ from, index, children, style }) => {\r\n  const [isInViewport, targetRef] = useIsInViewport({ threshold: 50 });\r\n\r\n  const variants = useMemo(\r\n    () => ({\r\n      hidden: {\r\n        opacity: 0,\r\n        scale: 0.5,\r\n        transition: { duration: 0.1, delay: 0.25 },\r\n      },\r\n      visible: {\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 0.1,\r\n          delay: 0.25 + 0.25 * index,\r\n          type: \"spring\",\r\n          damping: 4,\r\n          mass: 0.15,\r\n        },\r\n      },\r\n    }),\r\n    [index]\r\n  );\r\n\r\n  return (\r\n    <motion.div\r\n      ref={targetRef}\r\n      initial=\"hidden\"\r\n      animate={isInViewport ? \"visible\" : \"hidden\"}\r\n      variants={variants}\r\n      className={`bubble ${from}`}\r\n      style={style}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Bubble;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  motion,\r\n  useViewportScroll,\r\n  useSpring,\r\n  useTransform,\r\n} from \"framer-motion\";\r\n\r\nimport logo from \"../../assets/Hand.png\";\r\nimport \"./Header.css\";\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = () => {\r\n  const [isComplete, setIsComplete] = useState<boolean>(false);\r\n  const { scrollYProgress } = useViewportScroll();\r\n  const yRange = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\r\n  const pathLength = useSpring(yRange, { stiffness: 400, damping: 90 });\r\n\r\n  useEffect(() => yRange.onChange((v) => setIsComplete(v >= 1)), [yRange]);\r\n\r\n  return (\r\n    <header className=\"app-header\">\r\n      <img\r\n        className=\"app-logo\"\r\n        src={logo}\r\n        alt=\"sketchy outline of a hand in red\"\r\n      />\r\n      <h1 className=\"app-title\">Hey, You</h1>\r\n      <svg className=\"progress-bar\" viewBox=\"0 0 300 1\">\r\n        <motion.path\r\n          fill=\"none\"\r\n          strokeWidth=\"2\"\r\n          stroke={isComplete ? \"cornflowerblue\" : \"white\"}\r\n          strokeDasharray=\"0 1\"\r\n          d=\"M 0,0 L 300,0\"\r\n          style={{ pathLength }}\r\n        />\r\n      </svg>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://heyyouserver.herokuapp.com\",\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport API from \"../../api\";\r\nimport { Bubble } from \"../\";\r\nimport \"./RegistrationForm.css\";\r\n\r\ninterface RegistrationFormProps {}\r\n\r\nconst RegistrationForm: React.FC<RegistrationFormProps> = () => {\r\n  const { handleSubmit, register, errors, setValue } = useForm();\r\n\r\n  // TODO: add form types\r\n  const onSubmit = async (values: any) => {\r\n    console.log(values);\r\n    try {\r\n      const result = await API.post(\"/user\", { ...values });\r\n      console.log(result);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  // TODO: labels on inputs should be visible when filled!\r\n  return (\r\n    <Bubble index={0} from=\"us\" style={{ width: \"80%\" }}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          aria-label=\"Your name\"\r\n          className={errors.name && \"invalid\"}\r\n          placeholder=\"What is your name?\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <input\r\n          name=\"friend_name\"\r\n          type=\"text\"\r\n          aria-label=\"Friend's name\"\r\n          className={errors.friend_name && \"invalid\"}\r\n          placeholder=\"Who do you want to keep in touch with?\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <select\r\n          name=\"week\"\r\n          aria-label=\"Repeat every\"\r\n          className={errors.week && \"invalid\"}\r\n          placeholder=\"Every...\"\r\n          ref={register({ required: true })}\r\n          onChange={(event) => setValue(\"week\", parseInt(event.target.value))}\r\n        >\r\n          <option value={1}>First</option>\r\n          <option value={2}>Second</option>\r\n          <option value={3}>Third</option>\r\n          <option value={4}>Fourth</option>\r\n        </select>\r\n        <label htmlFor=\"day\"></label>\r\n        <select\r\n          name=\"day\"\r\n          aria-label=\"Day of the week\"\r\n          className={errors.day && \"invalid\"}\r\n          placeholder=\"On...\"\r\n          ref={register({ required: true })}\r\n          onChange={(event) => setValue(\"day\", parseInt(event.target.value))}\r\n        >\r\n          <option value={0}>Monday</option>\r\n          <option value={1}>Tuesday</option>\r\n          <option value={2}>Wednesday</option>\r\n          <option value={3}>Thursday</option>\r\n          <option value={4}>Friday</option>\r\n          <option value={5}>Saturday</option>\r\n          <option value={6}>Sunday</option>\r\n        </select>\r\n        <input\r\n          name=\"time\"\r\n          type=\"time\"\r\n          aria-label=\"Call at this time\"\r\n          className={errors.time && \"invalid\"}\r\n          placeholder=\"At this time\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <input\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          aria-label=\"Your phone number\"\r\n          placeholder=\"Great, where do we reach you?\"\r\n          className={errors.phone && \"invalid\"}\r\n          minLength={10}\r\n          ref={register({ validate: (value) => value.length >= 10 })}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </Bubble>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\n\r\nimport { Bubble, RegistrationForm } from \"../\";\r\nimport handText from \"../../assets/HandText.png\";\r\nimport \"./Scroller.css\";\r\n\r\ninterface ScrollerProps {}\r\n\r\ntype BubbleContent = { from: \"you\" | \"me\" | \"us\"; content: React.ReactNode };\r\n\r\nconst introElements: BubbleContent[] = [\r\n  {\r\n    from: \"you\",\r\n    content: (\r\n      <>\r\n        We’ve all have that friend: the one we want to stay in touch with, but\r\n        never quite do.\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    from: \"me\",\r\n    content: (\r\n      <>\r\n        Oof, yeah. I actually need to text them back{\" \"}\r\n        <span role=\"img\" aria-label=\"woman face-palm\">\r\n          🤦‍♀️\r\n        </span>\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    from: \"you\",\r\n    content: <>Maybe we should be doing more than texting.</>,\r\n  },\r\n  {\r\n    from: \"you\",\r\n    content: (\r\n      <>\r\n        What if there was a new kind of reminder...one that came with an\r\n        incentive?\r\n      </>\r\n    ),\r\n  },\r\n];\r\n\r\nconst detailElements: BubbleContent[] = [\r\n  {\r\n    from: \"you\",\r\n    content: (\r\n      <>\r\n        It’s easy: pick your person and we’ll remind you to call them once a\r\n        month.\r\n      </>\r\n    ),\r\n  },\r\n  { from: \"me\", content: <>What if I don't feel like it?</> },\r\n  { from: \"you\", content: <>Do it if you can. Don’t sweat it if you can’t.</> },\r\n  {\r\n    from: \"you\",\r\n    content: (\r\n      <>\r\n        But to keep you honest,{\" \"}\r\n        <strong>\r\n          every time you skip a call you'll donate a dollar directly to COVID-19\r\n          recovery efforts\r\n        </strong>\r\n        .\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    from: \"you\",\r\n    content: (\r\n      <>Be a good friend, do some good. It's win/win! What do you say?</>\r\n    ),\r\n  },\r\n];\r\n\r\nconst Scroller: React.FC<ScrollerProps> = () => {\r\n  return (\r\n    <main>\r\n      <section>\r\n        {introElements.map(({ from, content }, index) => (\r\n          <Bubble key={`intro-${index}`} index={index} from={from}>\r\n            {content}\r\n          </Bubble>\r\n        ))}\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <Bubble index={0} from=\"us\">\r\n          <img src={handText} alt=\"\" />\r\n          <strong style={{ maxWidth: 240 }}>\r\n            A monthly reminder to FaceTime someone important.\r\n          </strong>\r\n        </Bubble>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        {detailElements.map(({ from, content }, index) => (\r\n          <Bubble key={`detail-${index}`} index={index} from={from}>\r\n            {content}\r\n          </Bubble>\r\n        ))}\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <RegistrationForm />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <Bubble index={0} from=\"you\">\r\n          <h3>Frequently Asked Questions</h3>\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">Why did you make this?</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Tell me more about [CHARITY]</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Who made this?</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">What's your privacy policy?</a>\r\n            </li>\r\n          </ul>\r\n        </Bubble>\r\n        <Bubble index={0} from=\"me\">\r\n          <h3>100% of proceeds go directly to our partner, [CHARITY]</h3>\r\n        </Bubble>\r\n        <Bubble index={0} from=\"you\">\r\n          Let us know if you have any questions or suggestions at{\" \"}\r\n          <a href=\"mailto:TKTKT@gmail.com\">TKTK@gmail.com</a>\r\n        </Bubble>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Scroller;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { Header, Scroller } from \"./\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Scroller />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}